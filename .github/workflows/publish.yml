name: Publish

on:
  release:
    types: [published, prereleased]

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
        registry-url: 'https://registry.npmjs.org/'
    - run: corepack enable
    - run: yarn config set enableImmutableInstalls false
    - run: yarn config set npmAuthToken $NODE_AUTH_TOKEN
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    - run: yarn
    - run: yarn build
    - run: yarn lint
    - run: yarn test
    - name: Check package version
      env:
        IS_PRERELEASE: ${{ github.event.release.prerelease }}
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "Package version: $PACKAGE_VERSION"

        if [[ "$IS_PRERELEASE" == "true" ]]; then
          # For prereleases, version must contain -beta
          if [[ "$PACKAGE_VERSION" != *"-beta"* ]]; then
            echo "‚ùå Prerelease failed: Package version '$PACKAGE_VERSION' must contain '-beta'"
            exit 1
          fi
          echo "‚úÖ Prerelease version check passed"
        else
          # For releases, version must NOT contain -beta
          if [[ "$PACKAGE_VERSION" == *"-beta"* ]]; then
            echo "‚ùå Release failed: Package version '$PACKAGE_VERSION' cannot contain '-beta'"
            exit 1
          fi
          echo "‚úÖ Release version check passed"
        fi
    - name: Publish to npm
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        IS_PRERELEASE: ${{ github.event.release.prerelease }}
      run: |
        if [[ "$IS_PRERELEASE" == "true" ]]; then
          yarn npm publish --tag beta
        else
          yarn npm publish
        fi
    - name: Send Discord Notification
      if: ${{ !github.event.release.prerelease }}
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        nodetail: true
        url: ${{ github.event.release.html_url }}
        title: üöÄ **RELEASE** **@digital-alchemy/core v${{ github.event.release.tag_name }}** published
        content: |
          **Release Notes:**
          ${{ github.event.release.body }}
