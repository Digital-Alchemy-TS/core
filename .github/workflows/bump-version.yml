name: Bump Package Version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - release
          - prerelease

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.DA_REPO_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: corepack enable

      - run: yarn config set enableImmutableInstalls false
      - run: yarn

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          if [ "${{ inputs.release_type }}" = "release" ]; then
            # Set to calver format (YY.MM.DD)
            CALVER_VERSION=$(date +%y.%-m.%-d)
            npm version $CALVER_VERSION --no-git-tag-version
            echo "new_version=$CALVER_VERSION" >> $GITHUB_OUTPUT
            echo "bump_type=calver" >> $GITHUB_OUTPUT
          else
            # Bump beta version using yarn
            npm version prerelease --preid beta --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "bump_type=beta" >> $GITHUB_OUTPUT
          fi

      - name: Create commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} (${{ steps.bump_version.outputs.bump_type }})"

      - name: Push changes
        run: git push origin HEAD:${{ github.ref }}

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release version ${{ steps.bump_version.outputs.new_version }}"
          git push origin "v${{ steps.bump_version.outputs.new_version }}"
